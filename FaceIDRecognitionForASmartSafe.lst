;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/22/2023 10:55:41 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2921      	GOTO       289
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AA      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AB      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A1      	MOVWF      33
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A0      	MOVWF      32
;FaceIDRecognitionForASmartSafe.c,37 :: 		void interrupt(void){ //interrupt service routine
;FaceIDRecognitionForASmartSafe.c,38 :: 		if(INTCON&0x04){// will get here every 1ms (TMR0 overflow)
0x000F	0x1D0B      	BTFSS      INTCON, 2
0x0010	0x2818      	GOTO       L_interrupt2
;FaceIDRecognitionForASmartSafe.c,39 :: 		TMR0=248; //reload TMR0
0x0011	0x30F8      	MOVLW      248
0x0012	0x0081      	MOVWF      TMR0
;FaceIDRecognitionForASmartSafe.c,40 :: 		cntr++;
0x0013	0x0AA2      	INCF       _cntr, 1
0x0014	0x1903      	BTFSC      STATUS, 2
0x0015	0x0AA3      	INCF       _cntr+1, 1
;FaceIDRecognitionForASmartSafe.c,41 :: 		INTCON = INTCON & 0xFB; //clear T0IF
0x0016	0x30FB      	MOVLW      251
0x0017	0x058B      	ANDWF      INTCON, 1
;FaceIDRecognitionForASmartSafe.c,42 :: 		}
L_interrupt2:
;FaceIDRecognitionForASmartSafe.c,43 :: 		if(PIR1&0x04){             //CCP1 interrupt (every 20ms)
0x0018	0x1D0C      	BTFSS      PIR1, 2
0x0019	0x2841      	GOTO       L_interrupt3
;FaceIDRecognitionForASmartSafe.c,44 :: 		if(HL){                 //high
0x001A	0x0825      	MOVF       _HL, 0
0x001B	0x1903      	BTFSC      STATUS, 2
0x001C	0x282A      	GOTO       L_interrupt4
;FaceIDRecognitionForASmartSafe.c,45 :: 		CCPR1H= angle >>8;    //To take the MSB
0x001D	0x0827      	MOVF       _angle+1, 0
0x001E	0x00F0      	MOVWF      R0
0x001F	0x01F1      	CLRF       R0+1
0x0020	0x0870      	MOVF       R0, 0
0x0021	0x0096      	MOVWF      CCPR1H
;FaceIDRecognitionForASmartSafe.c,46 :: 		CCPR1L= angle;        //To take the LSB
0x0022	0x0826      	MOVF       _angle, 0
0x0023	0x0095      	MOVWF      CCPR1L
;FaceIDRecognitionForASmartSafe.c,47 :: 		HL=0;                 //next time low
0x0024	0x01A5      	CLRF       _HL
;FaceIDRecognitionForASmartSafe.c,48 :: 		CCP1CON=0x09;         //next time Falling edge
0x0025	0x3009      	MOVLW      9
0x0026	0x0097      	MOVWF      CCP1CON
;FaceIDRecognitionForASmartSafe.c,49 :: 		TMR1H=0;
0x0027	0x018F      	CLRF       TMR1H
;FaceIDRecognitionForASmartSafe.c,50 :: 		TMR1L=0;
0x0028	0x018E      	CLRF       TMR1L
;FaceIDRecognitionForASmartSafe.c,51 :: 		}
0x0029	0x283F      	GOTO       L_interrupt5
L_interrupt4:
;FaceIDRecognitionForASmartSafe.c,53 :: 		CCPR1H= (40000 - angle) >>8; //40000 is 20ms
0x002A	0x0826      	MOVF       _angle, 0
0x002B	0x3C40      	SUBLW      64
0x002C	0x00F3      	MOVWF      R3
0x002D	0x0827      	MOVF       _angle+1, 0
0x002E	0x1C03      	BTFSS      STATUS, 0
0x002F	0x3E01      	ADDLW      1
0x0030	0x3C9C      	SUBLW      156
0x0031	0x00F4      	MOVWF      R3+1
0x0032	0x0874      	MOVF       R3+1, 0
0x0033	0x00F0      	MOVWF      R0
0x0034	0x01F1      	CLRF       R0+1
0x0035	0x0870      	MOVF       R0, 0
0x0036	0x0096      	MOVWF      CCPR1H
;FaceIDRecognitionForASmartSafe.c,54 :: 		CCPR1L= (40000 - angle);     //40000 is 20ms
0x0037	0x0873      	MOVF       R3, 0
0x0038	0x0095      	MOVWF      CCPR1L
;FaceIDRecognitionForASmartSafe.c,55 :: 		CCP1CON=0x08;                //next time rising edge
0x0039	0x3008      	MOVLW      8
0x003A	0x0097      	MOVWF      CCP1CON
;FaceIDRecognitionForASmartSafe.c,56 :: 		HL=1;                        //next time High
0x003B	0x3001      	MOVLW      1
0x003C	0x00A5      	MOVWF      _HL
;FaceIDRecognitionForASmartSafe.c,57 :: 		TMR1H=0;                     //reset TMR1
0x003D	0x018F      	CLRF       TMR1H
;FaceIDRecognitionForASmartSafe.c,58 :: 		TMR1L=0;                     //reset TMR1
0x003E	0x018E      	CLRF       TMR1L
;FaceIDRecognitionForASmartSafe.c,59 :: 		}
L_interrupt5:
;FaceIDRecognitionForASmartSafe.c,61 :: 		PIR1=PIR1&0xFB;
0x003F	0x30FB      	MOVLW      251
0x0040	0x058C      	ANDWF      PIR1, 1
;FaceIDRecognitionForASmartSafe.c,62 :: 		}
L_interrupt3:
;FaceIDRecognitionForASmartSafe.c,63 :: 		if(PIR1&0x01){                   //TMR1 ovwerflow
0x0041	0x1C0C      	BTFSS      PIR1, 0
0x0042	0x2845      	GOTO       L_interrupt6
;FaceIDRecognitionForASmartSafe.c,64 :: 		PIR1=PIR1&0xFE;
0x0043	0x30FE      	MOVLW      254
0x0044	0x058C      	ANDWF      PIR1, 1
;FaceIDRecognitionForASmartSafe.c,65 :: 		}
L_interrupt6:
;FaceIDRecognitionForASmartSafe.c,67 :: 		}
L_end_interrupt:
L__interrupt44:
0x0045	0x0821      	MOVF       33, 0
0x0046	0x00F0      	MOVWF      R0
0x0047	0x0820      	MOVF       32, 0
0x0048	0x00F1      	MOVWF      R1
0x0049	0x082B      	MOVF       ___savePCLATH, 0
0x004A	0x008A      	MOVWF      PCLATH
0x004B	0x0E2A      	SWAPF      ___saveSTATUS, 0
0x004C	0x0083      	MOVWF      STATUS
0x004D	0x0EFF      	SWAPF      R15, 1
0x004E	0x0E7F      	SWAPF      R15, 0
0x004F	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0050	0x1283      	BCF        STATUS, 5
0x0051	0x1303      	BCF        STATUS, 6
0x0052	0x0829      	MOVF       ___DoICPAddr+1, 0
0x0053	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0054	0x0828      	MOVF       ___DoICPAddr, 0
0x0055	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0056	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0057	0x2050      	CALL       _____DoICP
0x0058	0x118A      	BCF        PCLATH, 3
0x0059	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x005A	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x005B	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x005C	0x0AA8      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x005D	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x005E	0x0AA9      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x005F	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0060	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0061	0x2857      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0062	0x0008      	RETURN
; end of ___CC2DW
_Lcd_CmdWrite:
;FaceIDRecognitionForASmartSafe.c,74 :: 		void Lcd_CmdWrite(char cmd)
;FaceIDRecognitionForASmartSafe.c,76 :: 		LcdDataBus = (cmd & 0xF0);     //Send higher nibble
0x0063	0x30F0      	MOVLW      240
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x1303      	BCF        STATUS, 6
0x0066	0x056A      	ANDWF      FARG_Lcd_CmdWrite_cmd, 0
0x0067	0x0088      	MOVWF      PORTD
;FaceIDRecognitionForASmartSafe.c,77 :: 		LcdControlBus &= ~(1<<LCD_RS); // Send LOW pulse on RS pin for selecting Command register
0x0068	0x1008      	BCF        PORTD, 0
;FaceIDRecognitionForASmartSafe.c,78 :: 		LcdControlBus &= ~(1<<LCD_RW); // Send LOW pulse on RW pin for Write operation
0x0069	0x1088      	BCF        PORTD, 1
;FaceIDRecognitionForASmartSafe.c,79 :: 		LcdControlBus |= (1<<LCD_EN);  // Generate a High-to-low pulse on EN pin
0x006A	0x1508      	BSF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,80 :: 		delay_ms(50);
0x006B	0x3082      	MOVLW      130
0x006C	0x00FC      	MOVWF      R12
0x006D	0x30DD      	MOVLW      221
0x006E	0x00FD      	MOVWF      R13
L_Lcd_CmdWrite7:
0x006F	0x0BFD      	DECFSZ     R13, 1
0x0070	0x286F      	GOTO       L_Lcd_CmdWrite7
0x0071	0x0BFC      	DECFSZ     R12, 1
0x0072	0x286F      	GOTO       L_Lcd_CmdWrite7
0x0073	0x0000      	NOP
0x0074	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,81 :: 		LcdControlBus &= ~(1<<LCD_EN);
0x0075	0x1108      	BCF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,83 :: 		delay_ms(100);
0x0076	0x3002      	MOVLW      2
0x0077	0x00FB      	MOVWF      R11
0x0078	0x3004      	MOVLW      4
0x0079	0x00FC      	MOVWF      R12
0x007A	0x30BA      	MOVLW      186
0x007B	0x00FD      	MOVWF      R13
L_Lcd_CmdWrite8:
0x007C	0x0BFD      	DECFSZ     R13, 1
0x007D	0x287C      	GOTO       L_Lcd_CmdWrite8
0x007E	0x0BFC      	DECFSZ     R12, 1
0x007F	0x287C      	GOTO       L_Lcd_CmdWrite8
0x0080	0x0BFB      	DECFSZ     R11, 1
0x0081	0x287C      	GOTO       L_Lcd_CmdWrite8
0x0082	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,85 :: 		LcdDataBus = ((cmd<<4) & 0xF0); //Send Lower nibble
0x0083	0x086A      	MOVF       FARG_Lcd_CmdWrite_cmd, 0
0x0084	0x00F0      	MOVWF      R0
0x0085	0x0DF0      	RLF        R0, 1
0x0086	0x1070      	BCF        R0, 0
0x0087	0x0DF0      	RLF        R0, 1
0x0088	0x1070      	BCF        R0, 0
0x0089	0x0DF0      	RLF        R0, 1
0x008A	0x1070      	BCF        R0, 0
0x008B	0x0DF0      	RLF        R0, 1
0x008C	0x1070      	BCF        R0, 0
0x008D	0x30F0      	MOVLW      240
0x008E	0x0570      	ANDWF      R0, 0
0x008F	0x0088      	MOVWF      PORTD
;FaceIDRecognitionForASmartSafe.c,86 :: 		LcdControlBus &= ~(1<<LCD_RS);  // Send LOW pulse on RS pin for selecting Command register
0x0090	0x1008      	BCF        PORTD, 0
;FaceIDRecognitionForASmartSafe.c,87 :: 		LcdControlBus &= ~(1<<LCD_RW);  // Send LOW pulse on RW pin for Write operation
0x0091	0x1088      	BCF        PORTD, 1
;FaceIDRecognitionForASmartSafe.c,88 :: 		LcdControlBus |= (1<<LCD_EN);   // Generate a High-to-low pulse on EN pin
0x0092	0x1508      	BSF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,89 :: 		delay_ms(50);
0x0093	0x3082      	MOVLW      130
0x0094	0x00FC      	MOVWF      R12
0x0095	0x30DD      	MOVLW      221
0x0096	0x00FD      	MOVWF      R13
L_Lcd_CmdWrite9:
0x0097	0x0BFD      	DECFSZ     R13, 1
0x0098	0x2897      	GOTO       L_Lcd_CmdWrite9
0x0099	0x0BFC      	DECFSZ     R12, 1
0x009A	0x2897      	GOTO       L_Lcd_CmdWrite9
0x009B	0x0000      	NOP
0x009C	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,90 :: 		LcdControlBus &= ~(1<<LCD_EN);
0x009D	0x1108      	BCF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,92 :: 		delay_ms(100);
0x009E	0x3002      	MOVLW      2
0x009F	0x00FB      	MOVWF      R11
0x00A0	0x3004      	MOVLW      4
0x00A1	0x00FC      	MOVWF      R12
0x00A2	0x30BA      	MOVLW      186
0x00A3	0x00FD      	MOVWF      R13
L_Lcd_CmdWrite10:
0x00A4	0x0BFD      	DECFSZ     R13, 1
0x00A5	0x28A4      	GOTO       L_Lcd_CmdWrite10
0x00A6	0x0BFC      	DECFSZ     R12, 1
0x00A7	0x28A4      	GOTO       L_Lcd_CmdWrite10
0x00A8	0x0BFB      	DECFSZ     R11, 1
0x00A9	0x28A4      	GOTO       L_Lcd_CmdWrite10
0x00AA	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,93 :: 		}
L_end_Lcd_CmdWrite:
0x00AB	0x0008      	RETURN
; end of _Lcd_CmdWrite
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x00AC	0x1683      	BSF        STATUS, 5
0x00AD	0x1303      	BCF        STATUS, 6
0x00AE	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x00AF	0x3090      	MOVLW      144
0x00B0	0x1283      	BCF        STATUS, 5
0x00B1	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x00B2	0x1683      	BSF        STATUS, 5
0x00B3	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x00B4	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x00B5	0x1283      	BCF        STATUS, 5
0x00B6	0x1E8C      	BTFSS      PIR1, 5
0x00B7	0x28BB      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x00B8	0x081A      	MOVF       RCREG, 0
0x00B9	0x00F0      	MOVWF      R0
0x00BA	0x28B5      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x00BB	0x0008      	RETURN
; end of _UART1_Init
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x00BC	0x3000      	MOVLW      0
0x00BD	0x1283      	BCF        STATUS, 5
0x00BE	0x1303      	BCF        STATUS, 6
0x00BF	0x1A8C      	BTFSC      PIR1, 5
0x00C0	0x3001      	MOVLW      1
0x00C1	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x00C2	0x0008      	RETURN
; end of _UART1_Data_Ready
_Lcd_DataWrite:
;FaceIDRecognitionForASmartSafe.c,99 :: 		void Lcd_DataWrite(char dat)
;FaceIDRecognitionForASmartSafe.c,101 :: 		LcdDataBus = (dat & 0xF0);      //Send higher nibble
0x00C3	0x30F0      	MOVLW      240
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1303      	BCF        STATUS, 6
0x00C6	0x056A      	ANDWF      FARG_Lcd_DataWrite_dat, 0
0x00C7	0x0088      	MOVWF      PORTD
;FaceIDRecognitionForASmartSafe.c,102 :: 		LcdControlBus |= (1<<LCD_RS);   // Send HIGH pulse on RS pin for selecting data register
0x00C8	0x1408      	BSF        PORTD, 0
;FaceIDRecognitionForASmartSafe.c,103 :: 		LcdControlBus &= ~(1<<LCD_RW);  // Send LOW pulse on RW pin for Write operation
0x00C9	0x1088      	BCF        PORTD, 1
;FaceIDRecognitionForASmartSafe.c,104 :: 		LcdControlBus |= (1<<LCD_EN);   // Generate a High-to-low pulse on EN pin
0x00CA	0x1508      	BSF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,106 :: 		delay_ms(50);
0x00CB	0x3082      	MOVLW      130
0x00CC	0x00FC      	MOVWF      R12
0x00CD	0x30DD      	MOVLW      221
0x00CE	0x00FD      	MOVWF      R13
L_Lcd_DataWrite11:
0x00CF	0x0BFD      	DECFSZ     R13, 1
0x00D0	0x28CF      	GOTO       L_Lcd_DataWrite11
0x00D1	0x0BFC      	DECFSZ     R12, 1
0x00D2	0x28CF      	GOTO       L_Lcd_DataWrite11
0x00D3	0x0000      	NOP
0x00D4	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,107 :: 		LcdControlBus &= ~(1<<LCD_EN);
0x00D5	0x1108      	BCF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,109 :: 		delay_ms(100);
0x00D6	0x3002      	MOVLW      2
0x00D7	0x00FB      	MOVWF      R11
0x00D8	0x3004      	MOVLW      4
0x00D9	0x00FC      	MOVWF      R12
0x00DA	0x30BA      	MOVLW      186
0x00DB	0x00FD      	MOVWF      R13
L_Lcd_DataWrite12:
0x00DC	0x0BFD      	DECFSZ     R13, 1
0x00DD	0x28DC      	GOTO       L_Lcd_DataWrite12
0x00DE	0x0BFC      	DECFSZ     R12, 1
0x00DF	0x28DC      	GOTO       L_Lcd_DataWrite12
0x00E0	0x0BFB      	DECFSZ     R11, 1
0x00E1	0x28DC      	GOTO       L_Lcd_DataWrite12
0x00E2	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,111 :: 		LcdDataBus = ((dat<<4) & 0xF0);  //Send Lower nibble
0x00E3	0x086A      	MOVF       FARG_Lcd_DataWrite_dat, 0
0x00E4	0x00F0      	MOVWF      R0
0x00E5	0x0DF0      	RLF        R0, 1
0x00E6	0x1070      	BCF        R0, 0
0x00E7	0x0DF0      	RLF        R0, 1
0x00E8	0x1070      	BCF        R0, 0
0x00E9	0x0DF0      	RLF        R0, 1
0x00EA	0x1070      	BCF        R0, 0
0x00EB	0x0DF0      	RLF        R0, 1
0x00EC	0x1070      	BCF        R0, 0
0x00ED	0x30F0      	MOVLW      240
0x00EE	0x0570      	ANDWF      R0, 0
0x00EF	0x0088      	MOVWF      PORTD
;FaceIDRecognitionForASmartSafe.c,112 :: 		LcdControlBus |= (1<<LCD_RS);    // Send HIGH pulse on RS pin for selecting data register
0x00F0	0x1408      	BSF        PORTD, 0
;FaceIDRecognitionForASmartSafe.c,113 :: 		LcdControlBus &= ~(1<<LCD_RW);   // Send LOW pulse on RW pin for Write operation
0x00F1	0x1088      	BCF        PORTD, 1
;FaceIDRecognitionForASmartSafe.c,114 :: 		LcdControlBus |= (1<<LCD_EN);    // Generate a High-to-low pulse on EN pin
0x00F2	0x1508      	BSF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,115 :: 		delay_ms(50);
0x00F3	0x3082      	MOVLW      130
0x00F4	0x00FC      	MOVWF      R12
0x00F5	0x30DD      	MOVLW      221
0x00F6	0x00FD      	MOVWF      R13
L_Lcd_DataWrite13:
0x00F7	0x0BFD      	DECFSZ     R13, 1
0x00F8	0x28F7      	GOTO       L_Lcd_DataWrite13
0x00F9	0x0BFC      	DECFSZ     R12, 1
0x00FA	0x28F7      	GOTO       L_Lcd_DataWrite13
0x00FB	0x0000      	NOP
0x00FC	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,116 :: 		LcdControlBus &= ~(1<<LCD_EN);
0x00FD	0x1108      	BCF        PORTD, 2
;FaceIDRecognitionForASmartSafe.c,118 :: 		delay_ms(10);
0x00FE	0x301A      	MOVLW      26
0x00FF	0x00FC      	MOVWF      R12
0x0100	0x30F8      	MOVLW      248
0x0101	0x00FD      	MOVWF      R13
L_Lcd_DataWrite14:
0x0102	0x0BFD      	DECFSZ     R13, 1
0x0103	0x2902      	GOTO       L_Lcd_DataWrite14
0x0104	0x0BFC      	DECFSZ     R12, 1
0x0105	0x2902      	GOTO       L_Lcd_DataWrite14
0x0106	0x0000      	NOP
;FaceIDRecognitionForASmartSafe.c,119 :: 		}
L_end_Lcd_DataWrite:
0x0107	0x0008      	RETURN
; end of _Lcd_DataWrite
_delay:
;FaceIDRecognitionForASmartSafe.c,30 :: 		void delay(unsigned int count){
;FaceIDRecognitionForASmartSafe.c,31 :: 		cntr = 0;
0x0108	0x1283      	BCF        STATUS, 5
0x0109	0x1303      	BCF        STATUS, 6
0x010A	0x01A2      	CLRF       _cntr
0x010B	0x01A3      	CLRF       _cntr+1
;FaceIDRecognitionForASmartSafe.c,32 :: 		while(cntr < count);
L_delay0:
0x010C	0x086B      	MOVF       FARG_delay_count+1, 0
0x010D	0x0223      	SUBWF      _cntr+1, 0
0x010E	0x1D03      	BTFSS      STATUS, 2
0x010F	0x2912      	GOTO       L__delay42
0x0110	0x086A      	MOVF       FARG_delay_count, 0
0x0111	0x0222      	SUBWF      _cntr, 0
L__delay42:
0x0112	0x1803      	BTFSC      STATUS, 0
0x0113	0x2915      	GOTO       L_delay1
0x0114	0x290C      	GOTO       L_delay0
L_delay1:
;FaceIDRecognitionForASmartSafe.c,33 :: 		}
L_end_delay:
0x0115	0x0008      	RETURN
; end of _delay
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0116	0x1283      	BCF        STATUS, 5
0x0117	0x1303      	BCF        STATUS, 6
0x0118	0x081A      	MOVF       RCREG, 0
0x0119	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x011A	0x1C98      	BTFSS      RCSTA, 1
0x011B	0x291E      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x011C	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x011D	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x011E	0x0871      	MOVF       R1, 0
0x011F	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x0120	0x0008      	RETURN
; end of _UART1_Read
_main:
0x0121	0x1283      	BCF        STATUS, 5
0x0122	0x1303      	BCF        STATUS, 6
0x0123	0x01A2      	CLRF       _cntr
0x0124	0x01A3      	CLRF       35
;FaceIDRecognitionForASmartSafe.c,123 :: 		int main()
;FaceIDRecognitionForASmartSafe.c,124 :: 		{  unsigned char i,Denied[]={"Access Denied!!"};
0x0125	0x3041      	MOVLW      65
0x0126	0x00B1      	MOVWF      main_Denied_L0
0x0127	0x3063      	MOVLW      99
0x0128	0x00B2      	MOVWF      main_Denied_L0+1
0x0129	0x3063      	MOVLW      99
0x012A	0x00B3      	MOVWF      main_Denied_L0+2
0x012B	0x3065      	MOVLW      101
0x012C	0x00B4      	MOVWF      main_Denied_L0+3
0x012D	0x3073      	MOVLW      115
0x012E	0x00B5      	MOVWF      main_Denied_L0+4
0x012F	0x3073      	MOVLW      115
0x0130	0x00B6      	MOVWF      main_Denied_L0+5
0x0131	0x3020      	MOVLW      32
0x0132	0x00B7      	MOVWF      main_Denied_L0+6
0x0133	0x3044      	MOVLW      68
0x0134	0x00B8      	MOVWF      main_Denied_L0+7
0x0135	0x3065      	MOVLW      101
0x0136	0x00B9      	MOVWF      main_Denied_L0+8
0x0137	0x306E      	MOVLW      110
0x0138	0x00BA      	MOVWF      main_Denied_L0+9
0x0139	0x3069      	MOVLW      105
0x013A	0x00BB      	MOVWF      main_Denied_L0+10
0x013B	0x3065      	MOVLW      101
0x013C	0x00BC      	MOVWF      main_Denied_L0+11
0x013D	0x3064      	MOVLW      100
0x013E	0x00BD      	MOVWF      main_Denied_L0+12
0x013F	0x3021      	MOVLW      33
0x0140	0x00BE      	MOVWF      main_Denied_L0+13
0x0141	0x3021      	MOVLW      33
0x0142	0x00BF      	MOVWF      main_Denied_L0+14
0x0143	0x01C0      	CLRF       main_Denied_L0+15
0x0144	0x3041      	MOVLW      65
0x0145	0x00C1      	MOVWF      main_Granted_L0
0x0146	0x3063      	MOVLW      99
0x0147	0x00C2      	MOVWF      main_Granted_L0+1
0x0148	0x3063      	MOVLW      99
0x0149	0x00C3      	MOVWF      main_Granted_L0+2
0x014A	0x3065      	MOVLW      101
0x014B	0x00C4      	MOVWF      main_Granted_L0+3
0x014C	0x3073      	MOVLW      115
0x014D	0x00C5      	MOVWF      main_Granted_L0+4
0x014E	0x3073      	MOVLW      115
0x014F	0x00C6      	MOVWF      main_Granted_L0+5
0x0150	0x3020      	MOVLW      32
0x0151	0x00C7      	MOVWF      main_Granted_L0+6
0x0152	0x3047      	MOVLW      71
0x0153	0x00C8      	MOVWF      main_Granted_L0+7
0x0154	0x3072      	MOVLW      114
0x0155	0x00C9      	MOVWF      main_Granted_L0+8
0x0156	0x3061      	MOVLW      97
0x0157	0x00CA      	MOVWF      main_Granted_L0+9
0x0158	0x306E      	MOVLW      110
0x0159	0x00CB      	MOVWF      main_Granted_L0+10
0x015A	0x3074      	MOVLW      116
0x015B	0x00CC      	MOVWF      main_Granted_L0+11
0x015C	0x3065      	MOVLW      101
0x015D	0x00CD      	MOVWF      main_Granted_L0+12
0x015E	0x3064      	MOVLW      100
0x015F	0x00CE      	MOVWF      main_Granted_L0+13
0x0160	0x3021      	MOVLW      33
0x0161	0x00CF      	MOVWF      main_Granted_L0+14
0x0162	0x3021      	MOVLW      33
0x0163	0x00D0      	MOVWF      main_Granted_L0+15
0x0164	0x01D1      	CLRF       main_Granted_L0+16
0x0165	0x3057      	MOVLW      87
0x0166	0x00D2      	MOVWF      main_Welcome_L0
0x0167	0x3065      	MOVLW      101
0x0168	0x00D3      	MOVWF      main_Welcome_L0+1
0x0169	0x306C      	MOVLW      108
0x016A	0x00D4      	MOVWF      main_Welcome_L0+2
0x016B	0x3063      	MOVLW      99
0x016C	0x00D5      	MOVWF      main_Welcome_L0+3
0x016D	0x306F      	MOVLW      111
0x016E	0x00D6      	MOVWF      main_Welcome_L0+4
0x016F	0x306D      	MOVLW      109
0x0170	0x00D7      	MOVWF      main_Welcome_L0+5
0x0171	0x3065      	MOVLW      101
0x0172	0x00D8      	MOVWF      main_Welcome_L0+6
0x0173	0x3021      	MOVLW      33
0x0174	0x00D9      	MOVWF      main_Welcome_L0+7
0x0175	0x01DA      	CLRF       main_Welcome_L0+8
0x0176	0x3054      	MOVLW      84
0x0177	0x00DB      	MOVWF      main_Students_L0
0x0178	0x3068      	MOVLW      104
0x0179	0x00DC      	MOVWF      main_Students_L0+1
0x017A	0x3072      	MOVLW      114
0x017B	0x00DD      	MOVWF      main_Students_L0+2
0x017C	0x3065      	MOVLW      101
0x017D	0x00DE      	MOVWF      main_Students_L0+3
0x017E	0x3065      	MOVLW      101
0x017F	0x00DF      	MOVWF      main_Students_L0+4
0x0180	0x3020      	MOVLW      32
0x0181	0x00E0      	MOVWF      main_Students_L0+5
0x0182	0x3046      	MOVLW      70
0x0183	0x00E1      	MOVWF      main_Students_L0+6
0x0184	0x3061      	MOVLW      97
0x0185	0x00E2      	MOVWF      main_Students_L0+7
0x0186	0x3069      	MOVLW      105
0x0187	0x00E3      	MOVWF      main_Students_L0+8
0x0188	0x306C      	MOVLW      108
0x0189	0x00E4      	MOVWF      main_Students_L0+9
0x018A	0x3065      	MOVLW      101
0x018B	0x00E5      	MOVWF      main_Students_L0+10
0x018C	0x3064      	MOVLW      100
0x018D	0x00E6      	MOVWF      main_Students_L0+11
0x018E	0x01E7      	CLRF       main_Students_L0+12
0x018F	0x3041      	MOVLW      65
0x0190	0x1683      	BSF        STATUS, 5
0x0191	0x00A0      	MOVWF      main_Try_L0
0x0192	0x3074      	MOVLW      116
0x0193	0x00A1      	MOVWF      main_Try_L0+1
0x0194	0x3074      	MOVLW      116
0x0195	0x00A2      	MOVWF      main_Try_L0+2
0x0196	0x3065      	MOVLW      101
0x0197	0x00A3      	MOVWF      main_Try_L0+3
0x0198	0x306D      	MOVLW      109
0x0199	0x00A4      	MOVWF      main_Try_L0+4
0x019A	0x3070      	MOVLW      112
0x019B	0x00A5      	MOVWF      main_Try_L0+5
0x019C	0x3074      	MOVLW      116
0x019D	0x00A6      	MOVWF      main_Try_L0+6
0x019E	0x3073      	MOVLW      115
0x019F	0x00A7      	MOVWF      main_Try_L0+7
0x01A0	0x3021      	MOVLW      33
0x01A1	0x00A8      	MOVWF      main_Try_L0+8
0x01A2	0x01A9      	CLRF       main_Try_L0+9
0x01A3	0x1283      	BCF        STATUS, 5
0x01A4	0x01E8      	CLRF       main_counter_L0
0x01A5	0x01E9      	CLRF       main_counter_L0+1
;FaceIDRecognitionForASmartSafe.c,131 :: 		TRISB = 0x02;                   //RB1 is input
0x01A6	0x3002      	MOVLW      2
0x01A7	0x1683      	BSF        STATUS, 5
0x01A8	0x0086      	MOVWF      TRISB
;FaceIDRecognitionForASmartSafe.c,132 :: 		PORTB = 0x00;
0x01A9	0x1283      	BCF        STATUS, 5
0x01AA	0x0186      	CLRF       PORTB
;FaceIDRecognitionForASmartSafe.c,133 :: 		TRISC = 0x80;                   //RC7 Input, Rest Output
0x01AB	0x3080      	MOVLW      128
0x01AC	0x1683      	BSF        STATUS, 5
0x01AD	0x0087      	MOVWF      TRISC
;FaceIDRecognitionForASmartSafe.c,134 :: 		PORTC = 0x00;
0x01AE	0x1283      	BCF        STATUS, 5
0x01AF	0x0187      	CLRF       PORTC
;FaceIDRecognitionForASmartSafe.c,135 :: 		TMR1L=0;
0x01B0	0x018E      	CLRF       TMR1L
;FaceIDRecognitionForASmartSafe.c,136 :: 		TMR1H=0;
0x01B1	0x018F      	CLRF       TMR1H
;FaceIDRecognitionForASmartSafe.c,137 :: 		HL=1;                          //start high
0x01B2	0x3001      	MOVLW      1
0x01B3	0x00A5      	MOVWF      _HL
;FaceIDRecognitionForASmartSafe.c,138 :: 		CCP1CON=0x08;                  //Compare mode, set output on match
0x01B4	0x3008      	MOVLW      8
0x01B5	0x0097      	MOVWF      CCP1CON
;FaceIDRecognitionForASmartSafe.c,139 :: 		OPTION_REG = 0x87;             //Fosc/4 with 256 prescaler => incremetn every 0.5us*256=128us ==> overflow 8count*128us=1ms to overflow
0x01B6	0x3087      	MOVLW      135
0x01B7	0x1683      	BSF        STATUS, 5
0x01B8	0x0081      	MOVWF      OPTION_REG
;FaceIDRecognitionForASmartSafe.c,140 :: 		T1CON=0x01;                    //TMR1 On Fosc/4 (inc 0.5uS) with 0 prescaler (TMR1 overflow after 0xFFFF counts ==65535)==> 32.767ms
0x01B9	0x3001      	MOVLW      1
0x01BA	0x1283      	BCF        STATUS, 5
0x01BB	0x0090      	MOVWF      T1CON
;FaceIDRecognitionForASmartSafe.c,141 :: 		INTCON = INTCON | 0xA0;        //Global interrupt enable, TMR0 interrupt enable
0x01BC	0x30A0      	MOVLW      160
0x01BD	0x048B      	IORWF      INTCON, 1
;FaceIDRecognitionForASmartSafe.c,142 :: 		PIE1=PIE1|0x04;                //Enable CCP1 interrupts
0x01BE	0x1683      	BSF        STATUS, 5
0x01BF	0x150C      	BSF        PIE1, 2
;FaceIDRecognitionForASmartSafe.c,143 :: 		CCPR1H=2000>>8;                //MSB
0x01C0	0x3007      	MOVLW      7
0x01C1	0x1283      	BCF        STATUS, 5
0x01C2	0x0096      	MOVWF      CCPR1H
;FaceIDRecognitionForASmartSafe.c,144 :: 		CCPR1L=2000;                   //LSB
0x01C3	0x30D0      	MOVLW      208
0x01C4	0x0095      	MOVWF      CCPR1L
;FaceIDRecognitionForASmartSafe.c,145 :: 		LcdDataBusDirnReg = 0x00;      //Configure all the LCD pins as output
0x01C5	0x1683      	BSF        STATUS, 5
0x01C6	0x0188      	CLRF       TRISD
;FaceIDRecognitionForASmartSafe.c,148 :: 		Lcd_CmdWrite(0x02);        // Initialize Lcd in 4-bit mode
0x01C7	0x3002      	MOVLW      2
0x01C8	0x1283      	BCF        STATUS, 5
0x01C9	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x01CA	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,149 :: 		Lcd_CmdWrite(0x28);        // enable 5x7 mode for chars
0x01CB	0x3028      	MOVLW      40
0x01CC	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x01CD	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,150 :: 		Lcd_CmdWrite(0x0E);        // Display OFF, Cursor ON
0x01CE	0x300E      	MOVLW      14
0x01CF	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x01D0	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,151 :: 		Lcd_CmdWrite(0x01);        // Clear Display
0x01D1	0x3001      	MOVLW      1
0x01D2	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x01D3	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,152 :: 		Lcd_CmdWrite(0x80);        // Move the cursor to beginning of first line
0x01D4	0x3080      	MOVLW      128
0x01D5	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x01D6	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,154 :: 		UART1_Init(9600);          // Initialize UART module at 9600 bps
0x01D7	0x3033      	MOVLW      51
0x01D8	0x1683      	BSF        STATUS, 5
0x01D9	0x0099      	MOVWF      SPBRG
0x01DA	0x1518      	BSF        TXSTA, 2
0x01DB	0x20AC      	CALL       _UART1_Init
;FaceIDRecognitionForASmartSafe.c,155 :: 		delay(100);                // Wait for UART module to stabilize
0x01DC	0x3064      	MOVLW      100
0x01DD	0x00EA      	MOVWF      FARG_delay_count
0x01DE	0x3000      	MOVLW      0
0x01DF	0x00EB      	MOVWF      FARG_delay_count+1
0x01E0	0x2108      	CALL       _delay
;FaceIDRecognitionForASmartSafe.c,159 :: 		PORTB = PORTB | 0x02;
0x01E1	0x1486      	BSF        PORTB, 1
;FaceIDRecognitionForASmartSafe.c,160 :: 		angle=3045;                 //Closed
0x01E2	0x30E5      	MOVLW      229
0x01E3	0x00A6      	MOVWF      _angle
0x01E4	0x300B      	MOVLW      11
0x01E5	0x00A7      	MOVWF      _angle+1
;FaceIDRecognitionForASmartSafe.c,161 :: 		while(1){
L_main15:
;FaceIDRecognitionForASmartSafe.c,162 :: 		PORTB = PORTB & 0x00;      //Make sure all the leds are closed
0x01E6	0x3000      	MOVLW      0
0x01E7	0x0586      	ANDWF      PORTB, 1
;FaceIDRecognitionForASmartSafe.c,163 :: 		PORTC = PORTC & 0X80;      //Make sure the door is closed
0x01E8	0x3080      	MOVLW      128
0x01E9	0x0587      	ANDWF      PORTC, 1
;FaceIDRecognitionForASmartSafe.c,164 :: 		if((PORTB | 0x00)==0){    //IR sensor detected a body
0x01EA	0x0806      	MOVF       PORTB, 0
0x01EB	0x00F1      	MOVWF      R1
0x01EC	0x0871      	MOVF       R1, 0
0x01ED	0x3A00      	XORLW      0
0x01EE	0x1D03      	BTFSS      STATUS, 2
0x01EF	0x2AAF      	GOTO       L_main17
;FaceIDRecognitionForASmartSafe.c,165 :: 		PORTB = PORTB | 0x04;     //Yellow LED ON
0x01F0	0x1506      	BSF        PORTB, 2
;FaceIDRecognitionForASmartSafe.c,167 :: 		Lcd_CmdWrite(0x01);
0x01F1	0x3001      	MOVLW      1
0x01F2	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x01F3	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,168 :: 		for(v=0;Welcome[v]!=0;v++){  //Display Welcome
0x01F4	0x01AE      	CLRF       main_v_L0
L_main18:
0x01F5	0x082E      	MOVF       main_v_L0, 0
0x01F6	0x3E52      	ADDLW      main_Welcome_L0
0x01F7	0x0084      	MOVWF      FSR
0x01F8	0x0800      	MOVF       INDF, 0
0x01F9	0x3A00      	XORLW      0
0x01FA	0x1903      	BTFSC      STATUS, 2
0x01FB	0x2A04      	GOTO       L_main19
;FaceIDRecognitionForASmartSafe.c,169 :: 		Lcd_DataWrite(Welcome[v]);}
0x01FC	0x082E      	MOVF       main_v_L0, 0
0x01FD	0x3E52      	ADDLW      main_Welcome_L0
0x01FE	0x0084      	MOVWF      FSR
0x01FF	0x0800      	MOVF       INDF, 0
0x0200	0x00EA      	MOVWF      FARG_Lcd_DataWrite_dat
0x0201	0x20C3      	CALL       _Lcd_DataWrite
;FaceIDRecognitionForASmartSafe.c,168 :: 		for(v=0;Welcome[v]!=0;v++){  //Display Welcome
0x0202	0x0AAE      	INCF       main_v_L0, 1
;FaceIDRecognitionForASmartSafe.c,169 :: 		Lcd_DataWrite(Welcome[v]);}
0x0203	0x29F5      	GOTO       L_main18
L_main19:
;FaceIDRecognitionForASmartSafe.c,171 :: 		while(!UART1_Data_Ready()); //Read from Bluetooth
L_main21:
0x0204	0x20BC      	CALL       _UART1_Data_Ready
0x0205	0x0870      	MOVF       R0, 0
0x0206	0x1D03      	BTFSS      STATUS, 2
0x0207	0x2A09      	GOTO       L_main22
0x0208	0x2A04      	GOTO       L_main21
L_main22:
;FaceIDRecognitionForASmartSafe.c,172 :: 		if (UART1_Data_Ready()){
0x0209	0x20BC      	CALL       _UART1_Data_Ready
0x020A	0x0870      	MOVF       R0, 0
0x020B	0x1903      	BTFSC      STATUS, 2
0x020C	0x2AAC      	GOTO       L_main23
;FaceIDRecognitionForASmartSafe.c,173 :: 		IncData = UART1_Read();           //Store the received data in IncData
0x020D	0x2116      	CALL       _UART1_Read
0x020E	0x0870      	MOVF       R0, 0
0x020F	0x00A4      	MOVWF      _IncData
;FaceIDRecognitionForASmartSafe.c,174 :: 		if ( IncData == '1') {            //If it received 1, then this person is allowed to open the safe box
0x0210	0x0870      	MOVF       R0, 0
0x0211	0x3A31      	XORLW      49
0x0212	0x1D03      	BTFSS      STATUS, 2
0x0213	0x2A3E      	GOTO       L_main24
;FaceIDRecognitionForASmartSafe.c,175 :: 		PORTB = PORTB | 0X08;             //Turn on green
0x0214	0x1586      	BSF        PORTB, 3
;FaceIDRecognitionForASmartSafe.c,176 :: 		Lcd_CmdWrite(0x01);               //Clear Display
0x0215	0x3001      	MOVLW      1
0x0216	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x0217	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,177 :: 		for(n=0;Granted[n]!=0;n++){      //Display Granted
0x0218	0x01AD      	CLRF       main_n_L0
L_main25:
0x0219	0x082D      	MOVF       main_n_L0, 0
0x021A	0x3E41      	ADDLW      main_Granted_L0
0x021B	0x0084      	MOVWF      FSR
0x021C	0x0800      	MOVF       INDF, 0
0x021D	0x3A00      	XORLW      0
0x021E	0x1903      	BTFSC      STATUS, 2
0x021F	0x2A28      	GOTO       L_main26
;FaceIDRecognitionForASmartSafe.c,178 :: 		Lcd_DataWrite(Granted[n]);}
0x0220	0x082D      	MOVF       main_n_L0, 0
0x0221	0x3E41      	ADDLW      main_Granted_L0
0x0222	0x0084      	MOVWF      FSR
0x0223	0x0800      	MOVF       INDF, 0
0x0224	0x00EA      	MOVWF      FARG_Lcd_DataWrite_dat
0x0225	0x20C3      	CALL       _Lcd_DataWrite
;FaceIDRecognitionForASmartSafe.c,177 :: 		for(n=0;Granted[n]!=0;n++){      //Display Granted
0x0226	0x0AAD      	INCF       main_n_L0, 1
;FaceIDRecognitionForASmartSafe.c,178 :: 		Lcd_DataWrite(Granted[n]);}
0x0227	0x2A19      	GOTO       L_main25
L_main26:
;FaceIDRecognitionForASmartSafe.c,179 :: 		angle=1165;                      //Open the safe box's door
0x0228	0x308D      	MOVLW      141
0x0229	0x00A6      	MOVWF      _angle
0x022A	0x3004      	MOVLW      4
0x022B	0x00A7      	MOVWF      _angle+1
;FaceIDRecognitionForASmartSafe.c,180 :: 		delay(9000);
0x022C	0x3028      	MOVLW      40
0x022D	0x00EA      	MOVWF      FARG_delay_count
0x022E	0x3023      	MOVLW      35
0x022F	0x00EB      	MOVWF      FARG_delay_count+1
0x0230	0x2108      	CALL       _delay
;FaceIDRecognitionForASmartSafe.c,181 :: 		angle=3045;                     //Close the safe box's door
0x0231	0x30E5      	MOVLW      229
0x0232	0x00A6      	MOVWF      _angle
0x0233	0x300B      	MOVLW      11
0x0234	0x00A7      	MOVWF      _angle+1
;FaceIDRecognitionForASmartSafe.c,182 :: 		Lcd_CmdWrite(0x01);             //Clear display
0x0235	0x3001      	MOVLW      1
0x0236	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x0237	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,183 :: 		delay(2500);
0x0238	0x30C4      	MOVLW      196
0x0239	0x00EA      	MOVWF      FARG_delay_count
0x023A	0x3009      	MOVLW      9
0x023B	0x00EB      	MOVWF      FARG_delay_count+1
0x023C	0x2108      	CALL       _delay
;FaceIDRecognitionForASmartSafe.c,185 :: 		}
0x023D	0x2AAC      	GOTO       L_main28
L_main24:
;FaceIDRecognitionForASmartSafe.c,186 :: 		else if (IncData == '0')  {
0x023E	0x0824      	MOVF       _IncData, 0
0x023F	0x3A30      	XORLW      48
0x0240	0x1D03      	BTFSS      STATUS, 2
0x0241	0x2AAC      	GOTO       L_main29
;FaceIDRecognitionForASmartSafe.c,187 :: 		counter++;
0x0242	0x0AE8      	INCF       main_counter_L0, 1
0x0243	0x1903      	BTFSC      STATUS, 2
0x0244	0x0AE9      	INCF       main_counter_L0+1, 1
;FaceIDRecognitionForASmartSafe.c,188 :: 		PORTB = PORTB & 0X00;
0x0245	0x3000      	MOVLW      0
0x0246	0x0586      	ANDWF      PORTB, 1
;FaceIDRecognitionForASmartSafe.c,189 :: 		PORTB = PORTB | 0X20;               //Open red led
0x0247	0x1686      	BSF        PORTB, 5
;FaceIDRecognitionForASmartSafe.c,190 :: 		Lcd_CmdWrite(0x01);
0x0248	0x3001      	MOVLW      1
0x0249	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x024A	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,191 :: 		for(i=0;Denied[i]!=0;i++)           //Denied
0x024B	0x01AC      	CLRF       main_i_L0
L_main30:
0x024C	0x082C      	MOVF       main_i_L0, 0
0x024D	0x3E31      	ADDLW      main_Denied_L0
0x024E	0x0084      	MOVWF      FSR
0x024F	0x0800      	MOVF       INDF, 0
0x0250	0x3A00      	XORLW      0
0x0251	0x1903      	BTFSC      STATUS, 2
0x0252	0x2A5B      	GOTO       L_main31
;FaceIDRecognitionForASmartSafe.c,193 :: 		Lcd_DataWrite(Denied[i]);
0x0253	0x082C      	MOVF       main_i_L0, 0
0x0254	0x3E31      	ADDLW      main_Denied_L0
0x0255	0x0084      	MOVWF      FSR
0x0256	0x0800      	MOVF       INDF, 0
0x0257	0x00EA      	MOVWF      FARG_Lcd_DataWrite_dat
0x0258	0x20C3      	CALL       _Lcd_DataWrite
;FaceIDRecognitionForASmartSafe.c,191 :: 		for(i=0;Denied[i]!=0;i++)           //Denied
0x0259	0x0AAC      	INCF       main_i_L0, 1
;FaceIDRecognitionForASmartSafe.c,194 :: 		}
0x025A	0x2A4C      	GOTO       L_main30
L_main31:
;FaceIDRecognitionForASmartSafe.c,195 :: 		delay(4000);
0x025B	0x30A0      	MOVLW      160
0x025C	0x00EA      	MOVWF      FARG_delay_count
0x025D	0x300F      	MOVLW      15
0x025E	0x00EB      	MOVWF      FARG_delay_count+1
0x025F	0x2108      	CALL       _delay
;FaceIDRecognitionForASmartSafe.c,196 :: 		Lcd_CmdWrite(0x01);
0x0260	0x3001      	MOVLW      1
0x0261	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x0262	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,198 :: 		if(counter == 3) {
0x0263	0x3000      	MOVLW      0
0x0264	0x0669      	XORWF      main_counter_L0+1, 0
0x0265	0x1D03      	BTFSS      STATUS, 2
0x0266	0x2A69      	GOTO       L__main48
0x0267	0x3003      	MOVLW      3
0x0268	0x0668      	XORWF      main_counter_L0, 0
L__main48:
0x0269	0x1D03      	BTFSS      STATUS, 2
0x026A	0x2AA3      	GOTO       L_main33
;FaceIDRecognitionForASmartSafe.c,199 :: 		PORTB = PORTB & 0X00;           //Make sure all other Leds are off
0x026B	0x3000      	MOVLW      0
0x026C	0x0586      	ANDWF      PORTB, 1
;FaceIDRecognitionForASmartSafe.c,200 :: 		PORTB = PORTB | 0X30;           //Red led On, buzzer on
0x026D	0x3030      	MOVLW      48
0x026E	0x0486      	IORWF      PORTB, 1
;FaceIDRecognitionForASmartSafe.c,201 :: 		delay(2000);
0x026F	0x30D0      	MOVLW      208
0x0270	0x00EA      	MOVWF      FARG_delay_count
0x0271	0x3007      	MOVLW      7
0x0272	0x00EB      	MOVWF      FARG_delay_count+1
0x0273	0x2108      	CALL       _delay
;FaceIDRecognitionForASmartSafe.c,203 :: 		counter = 0;
0x0274	0x01E8      	CLRF       main_counter_L0
0x0275	0x01E9      	CLRF       main_counter_L0+1
;FaceIDRecognitionForASmartSafe.c,204 :: 		for(s=0;Students[s]!=0;s++)     //Denied
0x0276	0x01AF      	CLRF       main_s_L0
L_main34:
0x0277	0x082F      	MOVF       main_s_L0, 0
0x0278	0x3E5B      	ADDLW      main_Students_L0
0x0279	0x0084      	MOVWF      FSR
0x027A	0x0800      	MOVF       INDF, 0
0x027B	0x3A00      	XORLW      0
0x027C	0x1903      	BTFSC      STATUS, 2
0x027D	0x2A86      	GOTO       L_main35
;FaceIDRecognitionForASmartSafe.c,206 :: 		Lcd_DataWrite(Students[s]);
0x027E	0x082F      	MOVF       main_s_L0, 0
0x027F	0x3E5B      	ADDLW      main_Students_L0
0x0280	0x0084      	MOVWF      FSR
0x0281	0x0800      	MOVF       INDF, 0
0x0282	0x00EA      	MOVWF      FARG_Lcd_DataWrite_dat
0x0283	0x20C3      	CALL       _Lcd_DataWrite
;FaceIDRecognitionForASmartSafe.c,204 :: 		for(s=0;Students[s]!=0;s++)     //Denied
0x0284	0x0AAF      	INCF       main_s_L0, 1
;FaceIDRecognitionForASmartSafe.c,207 :: 		}
0x0285	0x2A77      	GOTO       L_main34
L_main35:
;FaceIDRecognitionForASmartSafe.c,208 :: 		Lcd_CmdWrite(0xc0);
0x0286	0x30C0      	MOVLW      192
0x0287	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x0288	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,209 :: 		for(t=0;Try[t]!=0;t++)         //Denied
0x0289	0x01B0      	CLRF       main_t_L0
L_main37:
0x028A	0x0830      	MOVF       main_t_L0, 0
0x028B	0x3EA0      	ADDLW      main_Try_L0
0x028C	0x0084      	MOVWF      FSR
0x028D	0x0800      	MOVF       INDF, 0
0x028E	0x3A00      	XORLW      0
0x028F	0x1903      	BTFSC      STATUS, 2
0x0290	0x2A99      	GOTO       L_main38
;FaceIDRecognitionForASmartSafe.c,211 :: 		Lcd_DataWrite(Try[t]);
0x0291	0x0830      	MOVF       main_t_L0, 0
0x0292	0x3EA0      	ADDLW      main_Try_L0
0x0293	0x0084      	MOVWF      FSR
0x0294	0x0800      	MOVF       INDF, 0
0x0295	0x00EA      	MOVWF      FARG_Lcd_DataWrite_dat
0x0296	0x20C3      	CALL       _Lcd_DataWrite
;FaceIDRecognitionForASmartSafe.c,209 :: 		for(t=0;Try[t]!=0;t++)         //Denied
0x0297	0x0AB0      	INCF       main_t_L0, 1
;FaceIDRecognitionForASmartSafe.c,212 :: 		}
0x0298	0x2A8A      	GOTO       L_main37
L_main38:
;FaceIDRecognitionForASmartSafe.c,213 :: 		delay(2500);
0x0299	0x30C4      	MOVLW      196
0x029A	0x00EA      	MOVWF      FARG_delay_count
0x029B	0x3009      	MOVLW      9
0x029C	0x00EB      	MOVWF      FARG_delay_count+1
0x029D	0x2108      	CALL       _delay
;FaceIDRecognitionForASmartSafe.c,214 :: 		PORTB = PORTB & 0X20;           //Turn of buzzer
0x029E	0x3020      	MOVLW      32
0x029F	0x0586      	ANDWF      PORTB, 1
;FaceIDRecognitionForASmartSafe.c,215 :: 		Lcd_CmdWrite(0x01);
0x02A0	0x3001      	MOVLW      1
0x02A1	0x00EA      	MOVWF      FARG_Lcd_CmdWrite_cmd
0x02A2	0x2063      	CALL       _Lcd_CmdWrite
;FaceIDRecognitionForASmartSafe.c,216 :: 		}
L_main33:
;FaceIDRecognitionForASmartSafe.c,217 :: 		delay(2000);
0x02A3	0x30D0      	MOVLW      208
0x02A4	0x00EA      	MOVWF      FARG_delay_count
0x02A5	0x3007      	MOVLW      7
0x02A6	0x00EB      	MOVWF      FARG_delay_count+1
0x02A7	0x2108      	CALL       _delay
;FaceIDRecognitionForASmartSafe.c,218 :: 		angle=3045;                        //Close safe box door
0x02A8	0x30E5      	MOVLW      229
0x02A9	0x00A6      	MOVWF      _angle
0x02AA	0x300B      	MOVLW      11
0x02AB	0x00A7      	MOVWF      _angle+1
;FaceIDRecognitionForASmartSafe.c,219 :: 		}
L_main29:
L_main28:
;FaceIDRecognitionForASmartSafe.c,220 :: 		}
L_main23:
;FaceIDRecognitionForASmartSafe.c,221 :: 		PORTB = PORTB & 0x00;
0x02AC	0x3000      	MOVLW      0
0x02AD	0x0586      	ANDWF      PORTB, 1
;FaceIDRecognitionForASmartSafe.c,222 :: 		}
0x02AE	0x2AB1      	GOTO       L_main40
L_main17:
;FaceIDRecognitionForASmartSafe.c,225 :: 		PORTB = PORTB & 0x00;          //LEds OFF
0x02AF	0x3000      	MOVLW      0
0x02B0	0x0586      	ANDWF      PORTB, 1
;FaceIDRecognitionForASmartSafe.c,226 :: 		}
L_main40:
;FaceIDRecognitionForASmartSafe.c,229 :: 		}
0x02B1	0x29E6      	GOTO       L_main15
;FaceIDRecognitionForASmartSafe.c,230 :: 		}
L_end_main:
0x02B2	0x2AB2      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [76]    _interrupt
0x0050       [7]    _____DoICP
0x0057      [12]    ___CC2DW
0x0063      [73]    _Lcd_CmdWrite
0x00AC      [16]    _UART1_Init
0x00BC       [7]    _UART1_Data_Ready
0x00C3      [69]    _Lcd_DataWrite
0x0108      [14]    _delay
0x0116      [11]    _UART1_Read
0x0121     [402]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x001A       [1]    RCREG
0x0022       [2]    _cntr
0x0024       [1]    _IncData
0x0025       [1]    _HL
0x0026       [2]    _angle
0x0028       [2]    ___DoICPAddr
0x002A       [1]    ___saveSTATUS
0x002B       [1]    ___savePCLATH
0x002C       [1]    main_i_L0
0x002D       [1]    main_n_L0
0x002E       [1]    main_v_L0
0x002F       [1]    main_s_L0
0x0030       [1]    main_t_L0
0x0031      [16]    main_Denied_L0
0x0041      [17]    main_Granted_L0
0x0052       [9]    main_Welcome_L0
0x005B      [13]    main_Students_L0
0x0068       [2]    main_counter_L0
0x006A       [1]    FARG_Lcd_DataWrite_dat
0x006A       [2]    FARG_delay_count
0x006A       [1]    FARG_Lcd_CmdWrite_cmd
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC6_bit
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x008C       [1]    PIE1
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x00A0      [10]    main_Try_L0
